#!/usr/bin/python
from machinekit import hal
from autoclave import Config, Messages
import sys, datetime, yaml, os
persist_fname = "autoclave.conf.yaml"

msg = Messages('Autoclave remote')


# Read saved settings
saved_state = Config().read_state()

# Create remote component
rcomp = hal.RemoteComponent('autoclave-remote', timer=100)

# Pin creation data
data = [
    # Controls
    ('enable-switch', hal.HAL_BIT, hal.HAL_OUT),
    ('start', hal.HAL_BIT, hal.HAL_OUT),
    # Process settings
    ('flush-time', hal.HAL_S32, hal.HAL_OUT),
    ('ster-temp', hal.HAL_FLOAT, hal.HAL_OUT),
    ('ster-time', hal.HAL_S32, hal.HAL_OUT),
    ('finish-temp', hal.HAL_FLOAT, hal.HAL_OUT),
    ('idle-temp', hal.HAL_FLOAT, hal.HAL_OUT),
    # Status
    # - control comp
    ('temp-set', hal.HAL_FLOAT, hal.HAL_IN),
    ('time-set', hal.HAL_S32, hal.HAL_IN),
    ('valve-on', hal.HAL_BIT, hal.HAL_IN),
    ('elapsed-time', hal.HAL_S32, hal.HAL_IN),
    ('stage', hal.HAL_S32, hal.HAL_IN),
    ('stage-elapsed-time', hal.HAL_S32, hal.HAL_IN),
    ('error', hal.HAL_BIT, hal.HAL_IN),
    # - other
    ('estop', hal.HAL_BIT, hal.HAL_IN),
    ('temp-pot', hal.HAL_FLOAT, hal.HAL_IN),
    ('pressure', hal.HAL_FLOAT, hal.HAL_IN),
    ('burner-duty', hal.HAL_FLOAT, hal.HAL_IN),
]

for name, hal_type, hal_dir in data:
    pin = rcomp.newpin(name, hal_type, hal_dir)
    if name in saved_state:
        hal.signals[name].set(saved_state[name])
        msg.info("Restored setting %s = %s" % (name,saved_state[name]))
    pin.link(hal.signals[name])

rcomp.ready()
msg.info("Initialized")
